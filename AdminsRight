# AdminsRight
–ú–æ–¥—É–ª—å –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–¥–æ–±–Ω–æ –Ω–∞–∑–Ω–∞—á–∞—Ç—å 
# -*- coding: utf-8 -*-
# meta developer: @Gosgrrr
# scope: hikka_only

from .. import loader, utils
from telethon.tl.types import ChatAdminRights

@loader.tds
class AdminConfigurator(loader.Module):
    """–ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–æ–≤ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏"""

    strings = {
        "name": "AdminConfigurator",
        "rights": "üîÑ –¢–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∞:\n\n{}",
        "saved": "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{}</b> —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.",
        "loaded": "üõ° {} –Ω–∞–∑–Ω–∞—á–µ–Ω(–∞) –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å –∑–≤–∞–Ω–∏–µ–º ¬´{}¬ª.",
        "not_found": "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.",
        "list": "üìã –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∞–≤:\n\n{}",
        "deleted": "üóë –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{}</b> —É–¥–∞–ª–µ–Ω–∞.",
        "renamed": "‚úè –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{}</b> –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ <b>{}</b>.",
        "unadmin": "‚úÖ <b>–í—Å–µ –ø—Ä–∞–≤–∞ –∏ –∑–≤–∞–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç—ã.</b>",
    }

    def __init__(self):
        self.configs = self.get("configs", {})
        self.current = {k: False for k in self._all_rights()}
        self.rank = "–∞–¥–º–∏–Ω"

    def _all_rights(self):
        return {
            "info": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ",
            "post": "–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∫–∞–Ω–∞–ª–æ–≤)",
            "edit": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á—É–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∫–∞–Ω–∞–ª–æ–≤)",
            "add_admins": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",
            "anon": "–ê–Ω–æ–Ω–∏–º–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–≤ –≥—Ä—É–ø–ø–∞—Ö)",
            "poststory": "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–π",
            "editstory": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–π",
            "delstory": "–£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–π",
            "call": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ—á–∞—Ç–∞–º–∏",
            "delete": "–£–¥–∞–ª–µ–Ω–∏–µ —á—É–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π",
            "ban": "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "pin": "–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π",
            "invite": "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        }

    def _format_rights(self):
        lines = []
        for key, desc in self._all_rights().items():
            state = "‚úÖ" if self.current.get(key, False) else "‚ùå"
            lines.append(f"{state} `{key}` ({desc})")
        return self.strings["rights"].format("\n".join(lines))

    def _to_rights(self):
        return ChatAdminRights(
            change_info=self.current["info"],
            post_messages=self.current["post"],
            edit_messages=self.current["edit"],
            add_admins=self.current["add_admins"],
            anonymous=self.current["anon"],
            manage_call=self.current["call"],
            delete_messages=self.current["delete"],
            ban_users=self.current["ban"],
            pin_messages=self.current["pin"],
            invite_users=self.current["invite"],
        )

    def _save(self):
        self.set("configs", self.configs)

    async def adminscmd(self, message):
        """<–ø—Ä–∞–≤–æ> <on/off> ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∞–≤–æ"""
        args = utils.get_args(message)
        if len(args) != 2:
            return await utils.answer(message, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: `.admins <–ø—Ä–∞–≤–æ> <on/off>`")

        key, state = args[0], args[1].lower()
        if key not in self._all_rights():
            return await utils.answer(message, f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –ø—Ä–∞–≤–æ: `{key}`")

        self.current[key] = state == "on"
        await utils.answer(message, self._format_rights())

    async def admincmd(self, message):
        """<–∫–æ–Ω—Ñ–∏–≥> <username/id/reply> <–∑–≤–∞–Ω–∏–µ> ‚Äî –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥"""
        args = utils.get_args(message)
        if len(args) < 3:
            return await utils.answer(message, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: `.admin <–∫–æ–Ω—Ñ–∏–≥> <username/id/reply> <–∑–≤–∞–Ω–∏–µ>`")

        preset, target, rank = args[0], args[1], " ".join(args[2:])
        if preset not in self.configs:
            return await utils.answer(message, self.strings["not_found"].format(preset))

        user = await utils.get_user(message, target)
        rights = ChatAdminRights(**self.configs[preset])
        try:
            await message.client.edit_admin(message.chat_id, user.id, rights, rank)
            await utils.answer(message, self.strings["loaded"].format(utils.escape_html(user.first_name), rank))
        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞: {e}")

    async def adminsavecmd(self, message):
        """<–Ω–∞–∑–≤–∞–Ω–∏–µ> ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        args = utils.get_args(message)
        if not args:
            return await utils.answer(message, "‚ùå –£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        name = args[0]
        self.configs[name] = self.current.copy()
        self._save()
        await utils.answer(message, self.strings["saved"].format(name))

    async def adminlistcmd(self, message):
        """‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"""
        if not self.configs:
            return await utils.answer(message, "‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π")
        text = "\n".join([f"‚Ä¢ <b>{name}</b>" for name in self.configs])
        await utils.answer(message, self.strings["list"].format(text))

    async def adminshowcmd(self, message):
        """<–Ω–∞–∑–≤–∞–Ω–∏–µ> ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        args = utils.get_args(message)
        if not args:
            return await utils.answer(message, "‚ùå –£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        name = args[0]
        if name not in self.configs:
            return await utils.answer(message, self.strings["not_found"].format(name))
        conf = self.configs[name]
        lines = []
        for key, desc in self._all_rights().items():
            state = "‚úÖ" if conf.get(key, False) else "‚ùå"
            lines.append(f"{state} `{key}` ({desc})")
        await utils.answer(message, f"‚öô –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{name}</b>:\n\n" + "\n".join(lines))

    async def admindeletecmd(self, message):
        """<–Ω–∞–∑–≤–∞–Ω–∏–µ> ‚Äî —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        args = utils.get_args(message)
        if not args:
            return await utils.answer(message, "‚ùå –£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        name = args[0]
        if name not in self.configs:
            return await utils.answer(message, self.strings["not_found"].format(name))
        del self.configs[name]
        self._save()
        await utils.answer(message, self.strings["deleted"].format(name))

    async def adminrenamecmd(self, message):
        """<—Å—Ç–∞—Ä–æ–µ> <–Ω–æ–≤–æ–µ> ‚Äî –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        args = utils.get_args(message)
        if len(args) < 2:
            return await utils.answer(message, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: `.adminrename <—Å—Ç–∞—Ä–æ–µ> <–Ω–æ–≤–æ–µ>`")
        old, new = args[0], args[1]
        if old not in self.configs:
            return await utils.answer(message, self.strings["not_found"].format(old))
        self.configs[new] = self.configs.pop(old)
        self._save()
        await utils.answer(message, self.strings["renamed"].format(old, new))

    async def unadmincmd(self, message):
        """<username/id/reply> ‚Äî —Å–Ω—è—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∞"""
        args = utils.get_args(message)
        if not args and not message.is_reply:
            return await utils.answer(message, "‚ùå –£–∫–∞–∂–∏ username/id –∏–ª–∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")

        target = args[0] if args else None
        user = await utils.get_user(message, target)
        rights = ChatAdminRights(
            change_info=False,
            post_messages=False,
            edit_messages=False,
            add_admins=False,
            anonymous=False,
            manage_call=False,
            delete_messages=False,
            ban_users=False,
            pin_messages=False,
            invite_users=False,
        )
        try:
            await message.client.edit_admin(message.chat_id, user.id, rights, "")
            await utils.answer(message, self.strings["unadmin"].format(utils.escape_html(user.first_name)))
        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞: {e}")