# -- coding: utf-8 --
# meta developer: @Gosgrrr
# scope: hikka_only

__version__ = (0, 0, 78)

from .. import loader, utils
from telethon.tl.types import ChatAdminRights

@loader.tds
class AdminConfigurator(loader.Module):
    """–ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–æ–≤ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏"""

    strings = {
        "name": "AdminConfigurator",
        "rights": "<blockquote><emoji document_id=5258420634785947640>üîÑ</emoji> Current rights:\n\n{}</blockquote>",
        "saved": "<blockquote><emoji document_id=5258453452631056344>‚úÖÔ∏è</emoji> Configuration <b>{}</b> saved.</blockquote>",
        "loaded": "<blockquote><emoji document_id=5251203410396458957>üõ°</emoji> {} appointed as administrator with title ¬´{}¬ª.</blockquote>",
        "not_found": "<blockquote><emoji document_id=5258331647358540449>‚úçÔ∏è</emoji> Configuration <b>{}</b> not found.</blockquote>",
        "list": "<blockquote><emoji document_id=5258331647358540449>‚úçÔ∏è</emoji> Saved rights configurations:\n\n{}</blockquote>",
        "deleted": "<blockquote><emoji document_id=5258130763148172425>üóë</emoji> Configuration <b>{}</b> deleted.</blockquote>",
        "renamed": "<blockquote><emoji document_id=5197269100878907942>‚úèÔ∏è</emoji> Configuration <b>{}</b> renamed to <b>{}</b>.</blockquote>",
        "unadmin": "<blockquote><emoji document_id=5258453452631056344>‚úÖÔ∏è</emoji> <b>All rights and title removed from user {} successfully.</b></blockquote>",
        "invalid_admins_usage": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> Use: <code>{prefix}admins (right) (on/off)</code></blockquote>",
        "unknown_right": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> Unknown right: <code>{}</code></blockquote>",
        "invalid_admin_usage": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> Use: <code>{prefix}admin (config) (username/id/reply) (title)</code></blockquote>",
        "admin_error": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> Error: {}</blockquote>",
        "no_config_name": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> Specify the configuration name</blockquote>",
        "no_configs": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> No saved configurations</blockquote>",
        "invalid_rename_usage": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> Use: <code>{prefix}adminrename (old) (new)</code></blockquote>",
        "invalid_unadmin_usage": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> Specify username/id or reply to a message</blockquote>",
    }

    strings_ru = {
        "name": "AdminConfigurator",
        "rights": "<blockquote><emoji document_id=5258420634785947640>üîÑ</emoji> –¢–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∞:\n\n{}</blockquote>",
        "saved": "<blockquote><emoji document_id=5258453452631056344>‚úÖÔ∏è</emoji> –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{}</b> —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.</blockquote>",
        "loaded": "<blockquote><emoji document_id=5251203410396458957>üõ°</emoji> {} –Ω–∞–∑–Ω–∞—á–µ–Ω(–∞) –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å –∑–≤–∞–Ω–∏–µ–º ¬´{}¬ª.</blockquote>",
        "not_found": "<blockquote><emoji document_id=5258331647358540449>‚úçÔ∏è</emoji> –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</blockquote>",
        "list": "<blockquote><emoji document_id=5258331647358540449>‚úçÔ∏è</emoji> –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∞–≤:\n\n{}</blockquote>",
        "deleted": "<blockquote><emoji document_id=5258130763148172425>üóë</emoji> –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{}</b> —É–¥–∞–ª–µ–Ω–∞.</blockquote>",
        "renamed": "<blockquote><emoji document_id=5197269100878907942>‚úèÔ∏è</emoji> –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{}</b> –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ <b>{}</b>.</blockquote>",
        "unadmin": "<blockquote><emoji document_id=5258453452631056344>‚úÖÔ∏è</emoji> <b>–í—Å–µ –ø—Ä–∞–≤–∞ –∏ –∑–≤–∞–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç—ã.</b></blockquote>",
        "invalid_admins_usage": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> –ò—Å–ø–æ–ª—å–∑—É–π: <code>{prefix}admins (–ø—Ä–∞–≤–æ) (on/off)</code></blockquote>",
        "unknown_right": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –ø—Ä–∞–≤–æ: <code>{}</code></blockquote>",
        "invalid_admin_usage": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> –ò—Å–ø–æ–ª—å–∑—É–π: <code>{prefix}admin (–∫–æ–Ω—Ñ–∏–≥) (username/id/reply) (–∑–≤–∞–Ω–∏–µ)</code></blockquote>",
        "admin_error": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> –û—à–∏–±–∫–∞: {}</blockquote>",
        "no_config_name": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> –£–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</blockquote>",
        "no_configs": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π</blockquote>",
        "invalid_rename_usage": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> –ò—Å–ø–æ–ª—å–∑—É–π: <code>{prefix}adminrename (—Å—Ç–∞—Ä–æ–µ) (–Ω–æ–≤–æ–µ)</code></blockquote>",
        "invalid_unadmin_usage": "<blockquote><emoji document_id=5260342697075416641>‚ùå</emoji> –£–∫–∞–∂–∏ username/id –∏–ª–∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</blockquote>",
    }

    async def client_ready(self, client, db):
        self.client = client
        self._db = db
        self.prefix = self.get_prefix()
        self.configs = self._db.get("AdminConfigurator", "configs", {})
        self.current = {k: False for k in await self._all_rights()}
        self.rank = "–∞–¥–º–∏–Ω"

    async def _all_rights(self):
        return {
            "info": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ",
            "post": "–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∫–∞–Ω–∞–ª–æ–≤)",
            "edit": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á—É–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∫–∞–Ω–∞–ª–æ–≤)",
            "add_admins": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",
            "anon": "–ê–Ω–æ–Ω–∏–º–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–≤ –≥—Ä—É–ø–ø–∞—Ö)",
            "poststory": "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–π",
            "editstory": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–π",
            "delstory": "–£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–π",
            "call": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ—á–∞—Ç–∞–º–∏",
            "delete": "–£–¥–∞–ª–µ–Ω–∏–µ —á—É–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π",
            "ban": "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "pin": "–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π",
            "invite": "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        }

    async def _format_rights(self):
        lines = []
        for key, desc in (await self._all_rights()).items():
            state = "<emoji document_id=5258453452631056344>‚úÖÔ∏è</emoji>" if self.current.get(key, False) else "<emoji document_id=5260342697075416641>‚ùå</emoji>"
            lines.append(f"{state} <code>{key}</code> ({desc})")
        return self.strings["rights"].format("\n".join(lines))

    async def _to_rights(self):
        return ChatAdminRights(
            change_info=self.current["info"],
            post_messages=self.current["post"],
            edit_messages=self.current["edit"],
            add_admins=self.current["add_admins"],
            anonymous=self.current["anon"],
            manage_call=self.current["call"],
            delete_messages=self.current["delete"],
            ban_users=self.current["ban"],
            pin_messages=self.current["pin"],
            invite_users=self.current["invite"],
        )

    async def _save(self):
        self._db.set("AdminConfigurator", "configs", self.configs)

    @loader.command(ru_doc="(–ø—Ä–∞–≤–æ) (on/off) ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∞–≤–æ", en_doc="(right) (on/off) ‚Äî enable/disable a right")
    async def admins(self, message):
        args = utils.get_args(message)
        if len(args) != 2:
            return await utils.answer(message, self.strings["invalid_admins_usage"].format(prefix=self.prefix))

        key, state = args[0], args[1].lower()
        if key not in await self._all_rights():
            return await utils.answer(message, self.strings["unknown_right"].format(key))

        self.current[key] = state == "on"
        await utils.answer(message, await self._format_rights())

    @loader.command(ru_doc="(–∫–æ–Ω—Ñ–∏–≥) (username/id/reply) (–∑–≤–∞–Ω–∏–µ) ‚Äî –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥", en_doc="(config) (username/id/reply) (title) ‚Äî apply config")
    async def admin(self, message):
        args = utils.get_args(message)
        if len(args) < 3:
            return await utils.answer(message, self.strings["invalid_admin_usage"].format(prefix=self.prefix))

        preset, target, rank = args[0], args[1], " ".join(args[2:])
        if preset not in self.configs:
            return await utils.answer(message, self.strings["not_found"].format(preset))

        user = await utils.get_user(message, target)
        rights = ChatAdminRights(**self.configs[preset])
        try:
            await self.client.edit_admin(message.chat_id, user.id, rights, rank)
            await utils.answer(message, self.strings["loaded"].format(utils.escape_html(user.first_name), rank))
        except Exception as e:
            await utils.answer(message, self.strings["admin_error"].format(e))

    @loader.command(ru_doc="(–Ω–∞–∑–≤–∞–Ω–∏–µ) ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", en_doc="(name) ‚Äî save the current configuration")
    async def adminsave(self, message):
        args = utils.get_args(message)
        if not args:
            return await utils.answer(message, self.strings["no_config_name"])
        name = args[0]
        self.configs[name] = self.current.copy()
        await self._save()
        await utils.answer(message, self.strings["saved"].format(name))

    @loader.command(ru_doc="‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π", en_doc="‚Äî show list of saved configurations")
    async def adminlist(self, message):
        if not self.configs:
            return await utils.answer(message, self.strings["no_configs"])
        text = "\n".join([f"‚Ä¢ <b>{name}</b>" for name in self.configs])
        await utils.answer(message, self.strings["list"].format(text))

    @loader.command(ru_doc="(–Ω–∞–∑–≤–∞–Ω–∏–µ) ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", en_doc="(name) ‚Äî show rights of a configuration")
    async def adminshow(self, message):
        args = utils.get_args(message)
        if not args:
            return await utils.answer(message, self.strings["no_config_name"])
        name = args[0]
        if name not in self.configs:
            return await utils.answer(message, self.strings["not_found"].format(name))
        conf = self.configs[name]
        lines = []
        for key, desc in (await self._all_rights()).items():
            state = "<emoji document_id=5258453452631056344>‚úÖÔ∏è</emoji>" if conf.get(key, False) else "<emoji document_id=5260342697075416641>‚ùå</emoji>"
            lines.append(f"{state} <code>{key}</code> ({desc})")
        await utils.answer(message, f"<blockquote><emoji document_id=5258096772776991776>‚öô</emoji> –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è <b>{name}</b>:\n\n" + "\n".join(lines) + "</blockquote>")

    @loader.command(ru_doc="(–Ω–∞–∑–≤–∞–Ω–∏–µ) ‚Äî —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", en_doc="(name) ‚Äî delete a configuration")
    async def admindelete(self, message):
        args = utils.get_args(message)
        if not args:
            return await utils.answer(message, self.strings["no_config_name"])
        name = args[0]
        if name not in self.configs:
            return await utils.answer(message, self.strings["not_found"].format(name))
        del self.configs[name]
        await self._save()
        await utils.answer(message, self.strings["deleted"].format(name))

    @loader.command(ru_doc="(—Å—Ç–∞—Ä–æ–µ) (–Ω–æ–≤–æ–µ) ‚Äî –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", en_doc="(old) (new) ‚Äî rename a configuration")
    async def adminrename(self, message):
        args = utils.get_args(message)
        if len(args) < 2:
            return await utils.answer(message, self.strings["invalid_rename_usage"].format(prefix=self.prefix))
        old, new = args[0], args[1]
        if old not in self.configs:
            return await utils.answer(message, self.strings["not_found"].format(old))
        self.configs[new] = self.configs.pop(old)
        await self._save()
        await utils.answer(message, self.strings["renamed"].format(old, new))

    @loader.command(ru_doc="(username/id/reply) ‚Äî —Å–Ω—è—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∞", en_doc="(username/id/reply) ‚Äî remove all rights")
    async def unadmin(self, message):
        args = utils.get_args(message)
        if not args and not message.is_reply:
            return await utils.answer(message, self.strings["invalid_unadmin_usage"])

        target = args[0] if args else None
        user = await utils.get_user(message, target)
        rights = ChatAdminRights(
            change_info=False,
            post_messages=False,
            edit_messages=False,
            add_admins=False,
            anonymous=False,
            manage_call=False,
            delete_messages=False,
            ban_users=False,
            pin_messages=False,
            invite_users=False,
        )
        try:
            await self.client.edit_admin(message.chat_id, user.id, rights, "")
            await utils.answer(message, self.strings["unadmin"].format(utils.escape_html(user.first_name)))
        except Exception as e:
            await utils.answer(message, self.strings["admin_error"].format(e))
