# -*- coding: utf-8 -*-
# meta developer: @Gosgrrr
# scope: hikka_only

import sqlite3
import json
from .. import loader, utils

DB_FILE = "admin_rights.db"

DEFAULT_RIGHTS = {
    'info': 0, 'post': 0, 'edit': 0,
    'delete': 1, 'ban': 1, 'invite': 1,
    'pin': 1, 'add_admins': 0, 'anon': 0, 'call': 1,
    'poststory': 0, 'editstory': 0, 'delstory': 0
}

class AdminRightsConfig(loader.Module):
    """‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏ –∏ –∫–æ–Ω—Ñ–∏–≥–∞–º–∏"""

    strings = {"name": "AdminRights"}

    async def client_ready(self, client, db):
        self.db = db
        self._init_db()
        self.rights = self._load_rights()

    # üìÇ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
    def _init_db(self):
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('''CREATE TABLE IF NOT EXISTS admin_rights_config (
            right_name TEXT PRIMARY KEY,
            is_enabled INTEGER
        )''')
        cursor.execute('''CREATE TABLE IF NOT EXISTS admin_presets (
            name TEXT PRIMARY KEY,
            rights TEXT
        )''')
        cursor.execute("SELECT COUNT(*) FROM admin_rights_config")
        if cursor.fetchone()[0] == 0:
            cursor.executemany(
                'INSERT INTO admin_rights_config (right_name, is_enabled) VALUES (?, ?)',
                list(DEFAULT_RIGHTS.items())
            )
        conn.commit()
        conn.close()

    # üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∞–≤
    def _load_rights(self):
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute("SELECT right_name, is_enabled FROM admin_rights_config")
        rights = {row[0]: bool(row[1]) for row in cursor.fetchall()}
        conn.close()
        return rights

    # üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∞
    def _save_right(self, right_name, is_enabled):
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute(
            'INSERT OR REPLACE INTO admin_rights_config (right_name, is_enabled) VALUES (?, ?)',
            (right_name, 1 if is_enabled else 0),
        )
        conn.commit()
        conn.close()
        self.rights[right_name] = is_enabled

    # üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞
    def _save_preset(self, name):
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute(
            'INSERT OR REPLACE INTO admin_presets (name, rights) VALUES (?, ?)',
            (name, json.dumps(self.rights)),
        )
        conn.commit()
        conn.close()

    # üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ—Å–µ—Ç–∞
    def _load_preset(self, name):
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('SELECT rights FROM admin_presets WHERE name = ?', (name,))
        row = cursor.fetchone()
        conn.close()
        if row:
            rights = json.loads(row[0])
            for k, v in rights.items():
                self._save_right(k, v)
            return True
        return False

    # üìã –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤
    def _format_rights(self, rights=None):
        rights = rights or self.rights
        icons = {True: "‚úÖ", False: "‚ùå"}
        names = {
            "info": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ",
            "post": "–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∫–∞–Ω–∞–ª–æ–≤)",
            "edit": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á—É–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∫–∞–Ω–∞–ª–æ–≤)",
            "delete": "–£–¥–∞–ª–µ–Ω–∏–µ —á—É–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π",
            "ban": "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "invite": "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
            "pin": "–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π",
            "add_admins": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤",
            "anon": "–ê–Ω–æ–Ω–∏–º–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–≤ –≥—Ä—É–ø–ø–∞—Ö)",
            "call": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ—á–∞—Ç–∞–º–∏",
            "poststory": "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–π",
            "editstory": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–π",
            "delstory": "–£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–π",
        }
        text = "üîÑ –¢–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∞:\n\n"
        for right, enabled in rights.items():
            text += f"{icons[enabled]} `{right}` ({names[right]})\n"
        return text

    # üìå –ö–æ–º–∞–Ω–¥—ã

    async def admincmd(self, message):
        """[preset] [rank] - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∞ –∏–ª–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Å–µ—Ç"""
        args = utils.get_args(message)
        if not args:
            await utils.answer(message, self._format_rights())
            return

        if len(args) >= 2:
            preset, rank = args[0], " ".join(args[1:])
            user = message.sender.first_name
            if self._load_preset(preset):
                await utils.answer(
                    message,
                    f"üõ° {user} –Ω–∞–∑–Ω–∞—á–µ–Ω(–∞) –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å –∑–≤–∞–Ω–∏–µ–º ¬´{rank}¬ª.",
                )
            else:
                await utils.answer(message, f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ¬´{preset}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

    async def adminsscmd(self, message):
        """<–ø—Ä–∞–≤–æ> <on/off> - –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–æ"""
        args = utils.get_args(message)
        if len(args) != 2:
            await utils.answer(message, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: .admins <–ø—Ä–∞–≤–æ> <on/off>")
            return

        right, state = args
        if right not in self.rights:
            await utils.answer(message, f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –ø—Ä–∞–≤–æ: {right}")
            return

        is_enabled = state.lower() == "on"
        self._save_right(right, is_enabled)

        status = "–í–ö–õ–Æ–ß–ï–ù–û ‚úÖ" if is_enabled else "–í–´–ö–õ–Æ–ß–ï–ù–û ‚ùå"
        await utils.answer(message, f"{status} –ø—Ä–∞–≤–æ `{right}` –¥–ª—è –∫–æ–º–∞–Ω–¥—ã .admin.")

    async def adminsavecmd(self, message):
        """<–∏–º—è> - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        args = utils.get_args(message)
        if not args:
            await utils.answer(message, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: .adminsave <–∏–º—è>")
            return

        name = args[0]
        self._save_preset(name)
        await utils.answer(message, f"üíæ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ¬´{name}¬ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")

    async def adminlistcmd(self, message):
        """- –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"""
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute("SELECT name FROM admin_presets")
        presets = [row[0] for row in cursor.fetchall()]
        conn.close()

        if not presets:
            await utils.answer(message, "üìã –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –Ω–µ—Ç.")
            return

        text = "üìã –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∞–≤:\n\n"
        for name in presets:
            text += f"‚Ä¢ {name}\n"
        await utils.answer(message, text)

    async def adminshowcmd(self, message):
        """<–∏–º—è> - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        args = utils.get_args(message)
        if not args:
            await utils.answer(message, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: .adminshow <–∏–º—è>")
            return

        name = args[0]
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute("SELECT rights FROM admin_presets WHERE name = ?", (name,))
        row = cursor.fetchone()
        conn.close()

        if not row:
            await utils.answer(message, f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ¬´{name}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        rights = json.loads(row[0])
        await utils.answer(message, f"üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è **{name}**:\n\n" + self._format_rights(rights))

    async def admindelcmd(self, message):
        """<–∏–º—è> - —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        args = utils.get_args(message)
        if not args:
            await utils.answer(message, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: .admindel <–∏–º—è>")
            return

        name = args[0]
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute("DELETE FROM admin_presets WHERE name = ?", (name,))
        conn.commit()
        deleted = cursor.rowcount
        conn.close()

        if deleted:
            await utils.answer(message, f"üóë –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ¬´{name}¬ª —É–¥–∞–ª–µ–Ω–∞.")
        else:
            await utils.answer(message, f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ¬´{name}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

    async def adminrenamecmd(self, message):
        """<—Å—Ç–∞—Ä–æ–µ> <–Ω–æ–≤–æ–µ> - –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        args = utils.get_args(message)
        if len(args) != 2:
            await utils.answer(message, "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π: .adminrename <—Å—Ç–∞—Ä–æ–µ> <–Ω–æ–≤–æ–µ>")
            return

        old, new = args
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute("UPDATE admin_presets SET name = ? WHERE name = ?", (new, old))
        conn.commit()
        updated = cursor.rowcount
        conn.close()

        if updated:
            await utils.answer(message, f"‚úèÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ¬´{old}¬ª –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ ¬´{new}¬ª.")
        else:
            await utils.answer(message, f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ¬´{old}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")